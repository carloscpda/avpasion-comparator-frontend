/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n      query GetBrandsFilter {\n        brands {\n          data {\n            id\n            attributes {\n              name\n            }\n          }\n        }\n      }\n    ": types.GetBrandsFilterDocument,
    "\n      query GetBrands {\n        brands(\n          sort: \"name:asc\"\n          pagination: { limit: -1 }\n          filters: { series: { id: { notNull: true } } }\n        ) {\n          data {\n            id\n            attributes {\n              name\n              logo {\n                data {\n                  attributes {\n                    url\n                  }\n                }\n              }\n              series(pagination: { limit: -1 }) {\n                data {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    ": types.GetBrandsDocument,
    "\n        query GetCableConnectionsFilter {\n          connectionTypes(pagination: { limit: -1 }) {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      ": types.GetCableConnectionsFilterDocument,
    "\n      \n      query GetFuzzySearch {\n        tvs(pagination: { limit: -1 }) {\n          data {\n            attributes {\n              ...SearchTv\n            }\n          }\n        }\n      }\n    ": types.GetFuzzySearchDocument,
    "\n      query GetHelpArticles {\n        helpArticlesSection {\n          data {\n            attributes {\n              section1 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n              section2 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n              section3 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    ": types.GetHelpArticlesDocument,
    "\n        query GetImageTechnologies {\n          imageTechnologies {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      ": types.GetImageTechnologiesDocument,
    "\n        query GetMarketplaceTvs($tvId: ID!) {\n          marketplaceTvs(filters: { tv: { id: { eq: $tvId } } }) {\n            data {\n              id\n              attributes {\n                createdAt\n                affiliateUrl\n                available\n                deliveryCost\n                deliveryTime\n                reconditioned\n                price\n                basePrice\n                absoluteDiscount\n                relativeDiscount\n                marketplace {\n                  data {\n                    attributes {\n                      name\n                      color\n                      logo {\n                        data {\n                          attributes {\n                            url\n                          }\n                        }\n                      }\n                      paymentMethods {\n                        data {\n                          attributes {\n                            name\n                            logo {\n                              data {\n                                attributes {\n                                  url\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ": types.GetMarketplaceTvsDocument,
    "\n      query GetPrices {\n        maxPrice: tvs(sort: \"minPrice:desc\", pagination: { limit: 1 }) {\n          data {\n            attributes {\n              minPrice\n            }\n          }\n        }\n        minPrice: tvs(\n          sort: \"minPrice:asc\"\n          pagination: { limit: 1 }\n          filters: { minPrice: { gt: 0 } }\n        ) {\n          data {\n            attributes {\n              minPrice\n            }\n          }\n        }\n      }\n    ": types.GetPricesDocument,
    "\n      query GetReviews($page: Int!, $offset: Int!, $type: String) {\n        externalSites(\n          pagination: { page: $page, pageSize: $offset }\n          sort: \"createdAt:desc\"\n          filters: { type: { eq: $type, ne: \"help-article\" } }\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            attributes {\n              title\n              image\n              type\n              url\n              video\n            }\n          }\n        }\n      }\n    ": types.GetReviewsDocument,
    "\n      query GetSearchSale($id: ID!) {\n        marketplaceTv(id: $id) {\n          data {\n            id\n            attributes {\n              price\n              basePrice\n              absoluteDiscount\n              relativeDiscount\n              affiliateUrl\n              marketplace {\n                data {\n                  attributes {\n                    name\n                    logo {\n                      data {\n                        attributes {\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              tv {\n                data {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    ": types.GetSearchSaleDocument,
    "\n      query GetSearchTv($id: ID!) {\n        tv(id: $id) {\n          data {\n            id\n            attributes {\n              ...SearchTv\n            }\n          }\n        }\n      }\n      \n    ": types.GetSearchTvDocument,
    "\n      query GetTvSeries($serieId: ID!) {\n        tvs(\n          sort: \"name:desc\"\n          filters: { general: { brand: { serie: { id: { eq: $serieId } } } } }\n        ) {\n          data {\n            attributes {\n              name\n              slug\n              minPrice\n              general {\n                screenSize\n              }\n              image {\n                resolution {\n                  data {\n                    attributes {\n                      resolution\n                      alternativeName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    ": types.GetTvSeriesDocument,
    "\n      \n      query GetTv($slug: String!) {\n        tvs(filters: { slug: { eq: $slug } }) {\n          data {\n            id\n            attributes {\n              ...CoreTv\n            }\n          }\n        }\n      }\n    ": types.GetTvDocument,
    "\n      \n      query SearchSales(\n        $page: Int!\n        $offset: Int!\n        $brand: [ID]\n        $imageTechnology: [ID]\n        $cableConnections: [ID]\n        $sizeGreatherThan: Float\n        $sizeLessThan: Float\n        $minPrice: Float\n        $maxPrice: Float\n        $minScore: Float\n        $imageScore: Float\n      ) {\n        marketplaceTvs(\n          pagination: { page: $page, pageSize: $offset }\n          sort: \"tv.general.releaseDate:desc,absoluteDiscount:desc\"\n          filters: {\n            and: {\n              price: { gt: 0 }\n              absoluteDiscount: { gt: 0 }\n              tv: {\n                general: {\n                  screenSize: { gt: $sizeGreatherThan, lt: $sizeLessThan }\n                  brand: { serie: { brand: { id: { in: $brand } } } }\n                }\n                minPrice: { gte: $minPrice, lte: $maxPrice }\n                score: { gte: $minScore }\n                image: {\n                  score: { gte: $imageScore }\n                  technology: { image: { id: { in: $imageTechnology } } }\n                }\n                connections: {\n                  cable: { type: { id: { in: $cableConnections } } }\n                }\n              }\n            }\n          }\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            id\n          }\n        }\n      }\n    ": types.SearchSalesDocument,
    "\n  fragment SearchTv on Tv {\n    name\n    slug\n    score\n    ean\n    minPrice\n    general {\n      screenSize\n      releaseDate\n      brand {\n        model\n        serie {\n          data {\n            attributes {\n              uid\n              name\n              brand {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    image {\n      resolution {\n        data {\n          attributes {\n            resolution\n            icon {\n              data {\n                attributes {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n      technology {\n        image {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n    }\n    design {\n      score\n      pictures {\n        data {\n          attributes {\n            url\n            alternativeText\n          }\n        }\n      }\n    }\n  }\n": types.SearchTvFragmentDoc,
    "\n      query SearchTvs(\n        $page: Int!\n        $offset: Int!\n        $sortBy: [String]!\n        $filters: TvFiltersInput\n      ) {\n        tvs(\n          pagination: { page: $page, pageSize: $offset }\n          sort: $sortBy\n          filters: $filters\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            id\n          }\n        }\n      }\n    ": types.SearchTvsDocument,
    "\n  fragment CoreTv on Tv {\n    name\n    ean\n    slug\n    score\n    minPrice\n    maxPrice\n    general {\n      screenSize\n      releaseDate\n      brand {\n        model\n        serie {\n          data {\n            id\n            attributes {\n              uid\n              name\n              brand {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    image {\n      id\n      score\n      resolution {\n        data {\n          attributes {\n            resolution\n            alternativeName\n          }\n        }\n      }\n      technology {\n        image {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        panel {\n          data {\n            attributes {\n              type\n            }\n          }\n        }\n        lightingType {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        creationColor {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        panelManufacturer {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      backlightAndContrast {\n        brightness\n        contrast\n        zoneNumber\n        backlightType {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      colorimetry {\n        dciP3\n        rec709\n        rec2020\n        sRGB\n        colorDepth {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      hdr {\n        technologies {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      crystal {\n        horizontalVisionAngle\n        verticalVisionAngle\n        antiReflectiveFilter\n      }\n      processing {\n        processor {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      responseTimes {\n        gaming {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        inputLag60\n        inputLag120\n      }\n    }\n    sound {\n      id\n      score\n      speakers {\n        power\n        quantity\n      }\n      subwoofers {\n        power\n        quantity\n      }\n      power\n      outputChannels\n      technologies {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n    }\n    connections {\n      id\n      score\n      dvb {\n        data {\n          attributes {\n            name\n            type\n          }\n        }\n      }\n      hbbTV\n      cable {\n        quantity\n        type {\n          data {\n            attributes {\n              name\n              connection {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n        connectionTechnologies {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      wireless {\n        data {\n          attributes {\n            name\n            type {\n              data {\n                attributes {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      extraFeatures {\n        data {\n          attributes {\n            name\n            description\n          }\n        }\n      }\n    }\n    design {\n      id\n      score\n      dimensionsWithStand {\n        width\n        height\n        depth\n        weight\n      }\n      dimensionsWithoutStand {\n        width\n        height\n        depth\n        weight\n      }\n      screenShape {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n      colors {\n        data {\n          attributes {\n            name\n            hex\n          }\n        }\n      }\n      vesa {\n        data {\n          attributes {\n            size\n          }\n        }\n      }\n      pictures {\n        data {\n          attributes {\n            url\n            alternativeText\n            height\n            width\n          }\n        }\n      }\n    }\n    system {\n      id\n      score\n      operatingSystem {\n        data {\n          attributes {\n            version\n            operatingSystem {\n              data {\n                attributes {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      voiceAssistants {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n      hardware {\n        ram\n        rom\n        soc {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      consumption {\n        energyEfficiency\n        averageConsumption\n        consumption\n        standbyConsumption\n      }\n      powerSupply\n      powerSupplyFrequency\n    }\n    reviews {\n      id\n      reviews {\n        data {\n          attributes {\n            title\n            url\n            video\n            image\n            type\n          }\n        }\n      }\n      comparatives {\n        data {\n          attributes {\n            title\n            url\n            video\n            image\n            type\n          }\n        }\n      }\n    }\n  }\n": types.CoreTvFragmentDoc,
};

export function graphql(source: "\n      query GetBrandsFilter {\n        brands {\n          data {\n            id\n            attributes {\n              name\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetBrandsFilter {\n        brands {\n          data {\n            id\n            attributes {\n              name\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      query GetBrands {\n        brands(\n          sort: \"name:asc\"\n          pagination: { limit: -1 }\n          filters: { series: { id: { notNull: true } } }\n        ) {\n          data {\n            id\n            attributes {\n              name\n              logo {\n                data {\n                  attributes {\n                    url\n                  }\n                }\n              }\n              series(pagination: { limit: -1 }) {\n                data {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetBrands {\n        brands(\n          sort: \"name:asc\"\n          pagination: { limit: -1 }\n          filters: { series: { id: { notNull: true } } }\n        ) {\n          data {\n            id\n            attributes {\n              name\n              logo {\n                data {\n                  attributes {\n                    url\n                  }\n                }\n              }\n              series(pagination: { limit: -1 }) {\n                data {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n        query GetCableConnectionsFilter {\n          connectionTypes(pagination: { limit: -1 }) {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      "): (typeof documents)["\n        query GetCableConnectionsFilter {\n          connectionTypes(pagination: { limit: -1 }) {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      "];
export function graphql(source: "\n      \n      query GetFuzzySearch {\n        tvs(pagination: { limit: -1 }) {\n          data {\n            attributes {\n              ...SearchTv\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      \n      query GetFuzzySearch {\n        tvs(pagination: { limit: -1 }) {\n          data {\n            attributes {\n              ...SearchTv\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      query GetHelpArticles {\n        helpArticlesSection {\n          data {\n            attributes {\n              section1 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n              section2 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n              section3 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetHelpArticles {\n        helpArticlesSection {\n          data {\n            attributes {\n              section1 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n              section2 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n              section3 {\n                title\n                articles {\n                  data {\n                    attributes {\n                      title\n                      image\n                      type\n                      url\n                      video\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n        query GetImageTechnologies {\n          imageTechnologies {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      "): (typeof documents)["\n        query GetImageTechnologies {\n          imageTechnologies {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      "];
export function graphql(source: "\n        query GetMarketplaceTvs($tvId: ID!) {\n          marketplaceTvs(filters: { tv: { id: { eq: $tvId } } }) {\n            data {\n              id\n              attributes {\n                createdAt\n                affiliateUrl\n                available\n                deliveryCost\n                deliveryTime\n                reconditioned\n                price\n                basePrice\n                absoluteDiscount\n                relativeDiscount\n                marketplace {\n                  data {\n                    attributes {\n                      name\n                      color\n                      logo {\n                        data {\n                          attributes {\n                            url\n                          }\n                        }\n                      }\n                      paymentMethods {\n                        data {\n                          attributes {\n                            name\n                            logo {\n                              data {\n                                attributes {\n                                  url\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      "): (typeof documents)["\n        query GetMarketplaceTvs($tvId: ID!) {\n          marketplaceTvs(filters: { tv: { id: { eq: $tvId } } }) {\n            data {\n              id\n              attributes {\n                createdAt\n                affiliateUrl\n                available\n                deliveryCost\n                deliveryTime\n                reconditioned\n                price\n                basePrice\n                absoluteDiscount\n                relativeDiscount\n                marketplace {\n                  data {\n                    attributes {\n                      name\n                      color\n                      logo {\n                        data {\n                          attributes {\n                            url\n                          }\n                        }\n                      }\n                      paymentMethods {\n                        data {\n                          attributes {\n                            name\n                            logo {\n                              data {\n                                attributes {\n                                  url\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      "];
export function graphql(source: "\n      query GetPrices {\n        maxPrice: tvs(sort: \"minPrice:desc\", pagination: { limit: 1 }) {\n          data {\n            attributes {\n              minPrice\n            }\n          }\n        }\n        minPrice: tvs(\n          sort: \"minPrice:asc\"\n          pagination: { limit: 1 }\n          filters: { minPrice: { gt: 0 } }\n        ) {\n          data {\n            attributes {\n              minPrice\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetPrices {\n        maxPrice: tvs(sort: \"minPrice:desc\", pagination: { limit: 1 }) {\n          data {\n            attributes {\n              minPrice\n            }\n          }\n        }\n        minPrice: tvs(\n          sort: \"minPrice:asc\"\n          pagination: { limit: 1 }\n          filters: { minPrice: { gt: 0 } }\n        ) {\n          data {\n            attributes {\n              minPrice\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      query GetReviews($page: Int!, $offset: Int!, $type: String) {\n        externalSites(\n          pagination: { page: $page, pageSize: $offset }\n          sort: \"createdAt:desc\"\n          filters: { type: { eq: $type, ne: \"help-article\" } }\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            attributes {\n              title\n              image\n              type\n              url\n              video\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetReviews($page: Int!, $offset: Int!, $type: String) {\n        externalSites(\n          pagination: { page: $page, pageSize: $offset }\n          sort: \"createdAt:desc\"\n          filters: { type: { eq: $type, ne: \"help-article\" } }\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            attributes {\n              title\n              image\n              type\n              url\n              video\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      query GetSearchSale($id: ID!) {\n        marketplaceTv(id: $id) {\n          data {\n            id\n            attributes {\n              price\n              basePrice\n              absoluteDiscount\n              relativeDiscount\n              affiliateUrl\n              marketplace {\n                data {\n                  attributes {\n                    name\n                    logo {\n                      data {\n                        attributes {\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              tv {\n                data {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetSearchSale($id: ID!) {\n        marketplaceTv(id: $id) {\n          data {\n            id\n            attributes {\n              price\n              basePrice\n              absoluteDiscount\n              relativeDiscount\n              affiliateUrl\n              marketplace {\n                data {\n                  attributes {\n                    name\n                    logo {\n                      data {\n                        attributes {\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              tv {\n                data {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      query GetSearchTv($id: ID!) {\n        tv(id: $id) {\n          data {\n            id\n            attributes {\n              ...SearchTv\n            }\n          }\n        }\n      }\n      \n    "): (typeof documents)["\n      query GetSearchTv($id: ID!) {\n        tv(id: $id) {\n          data {\n            id\n            attributes {\n              ...SearchTv\n            }\n          }\n        }\n      }\n      \n    "];
export function graphql(source: "\n      query GetTvSeries($serieId: ID!) {\n        tvs(\n          sort: \"name:desc\"\n          filters: { general: { brand: { serie: { id: { eq: $serieId } } } } }\n        ) {\n          data {\n            attributes {\n              name\n              slug\n              minPrice\n              general {\n                screenSize\n              }\n              image {\n                resolution {\n                  data {\n                    attributes {\n                      resolution\n                      alternativeName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query GetTvSeries($serieId: ID!) {\n        tvs(\n          sort: \"name:desc\"\n          filters: { general: { brand: { serie: { id: { eq: $serieId } } } } }\n        ) {\n          data {\n            attributes {\n              name\n              slug\n              minPrice\n              general {\n                screenSize\n              }\n              image {\n                resolution {\n                  data {\n                    attributes {\n                      resolution\n                      alternativeName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      \n      query GetTv($slug: String!) {\n        tvs(filters: { slug: { eq: $slug } }) {\n          data {\n            id\n            attributes {\n              ...CoreTv\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      \n      query GetTv($slug: String!) {\n        tvs(filters: { slug: { eq: $slug } }) {\n          data {\n            id\n            attributes {\n              ...CoreTv\n            }\n          }\n        }\n      }\n    "];
export function graphql(source: "\n      \n      query SearchSales(\n        $page: Int!\n        $offset: Int!\n        $brand: [ID]\n        $imageTechnology: [ID]\n        $cableConnections: [ID]\n        $sizeGreatherThan: Float\n        $sizeLessThan: Float\n        $minPrice: Float\n        $maxPrice: Float\n        $minScore: Float\n        $imageScore: Float\n      ) {\n        marketplaceTvs(\n          pagination: { page: $page, pageSize: $offset }\n          sort: \"tv.general.releaseDate:desc,absoluteDiscount:desc\"\n          filters: {\n            and: {\n              price: { gt: 0 }\n              absoluteDiscount: { gt: 0 }\n              tv: {\n                general: {\n                  screenSize: { gt: $sizeGreatherThan, lt: $sizeLessThan }\n                  brand: { serie: { brand: { id: { in: $brand } } } }\n                }\n                minPrice: { gte: $minPrice, lte: $maxPrice }\n                score: { gte: $minScore }\n                image: {\n                  score: { gte: $imageScore }\n                  technology: { image: { id: { in: $imageTechnology } } }\n                }\n                connections: {\n                  cable: { type: { id: { in: $cableConnections } } }\n                }\n              }\n            }\n          }\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            id\n          }\n        }\n      }\n    "): (typeof documents)["\n      \n      query SearchSales(\n        $page: Int!\n        $offset: Int!\n        $brand: [ID]\n        $imageTechnology: [ID]\n        $cableConnections: [ID]\n        $sizeGreatherThan: Float\n        $sizeLessThan: Float\n        $minPrice: Float\n        $maxPrice: Float\n        $minScore: Float\n        $imageScore: Float\n      ) {\n        marketplaceTvs(\n          pagination: { page: $page, pageSize: $offset }\n          sort: \"tv.general.releaseDate:desc,absoluteDiscount:desc\"\n          filters: {\n            and: {\n              price: { gt: 0 }\n              absoluteDiscount: { gt: 0 }\n              tv: {\n                general: {\n                  screenSize: { gt: $sizeGreatherThan, lt: $sizeLessThan }\n                  brand: { serie: { brand: { id: { in: $brand } } } }\n                }\n                minPrice: { gte: $minPrice, lte: $maxPrice }\n                score: { gte: $minScore }\n                image: {\n                  score: { gte: $imageScore }\n                  technology: { image: { id: { in: $imageTechnology } } }\n                }\n                connections: {\n                  cable: { type: { id: { in: $cableConnections } } }\n                }\n              }\n            }\n          }\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            id\n          }\n        }\n      }\n    "];
export function graphql(source: "\n  fragment SearchTv on Tv {\n    name\n    slug\n    score\n    ean\n    minPrice\n    general {\n      screenSize\n      releaseDate\n      brand {\n        model\n        serie {\n          data {\n            attributes {\n              uid\n              name\n              brand {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    image {\n      resolution {\n        data {\n          attributes {\n            resolution\n            icon {\n              data {\n                attributes {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n      technology {\n        image {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n    }\n    design {\n      score\n      pictures {\n        data {\n          attributes {\n            url\n            alternativeText\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment SearchTv on Tv {\n    name\n    slug\n    score\n    ean\n    minPrice\n    general {\n      screenSize\n      releaseDate\n      brand {\n        model\n        serie {\n          data {\n            attributes {\n              uid\n              name\n              brand {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    image {\n      resolution {\n        data {\n          attributes {\n            resolution\n            icon {\n              data {\n                attributes {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n      technology {\n        image {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n    }\n    design {\n      score\n      pictures {\n        data {\n          attributes {\n            url\n            alternativeText\n          }\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n      query SearchTvs(\n        $page: Int!\n        $offset: Int!\n        $sortBy: [String]!\n        $filters: TvFiltersInput\n      ) {\n        tvs(\n          pagination: { page: $page, pageSize: $offset }\n          sort: $sortBy\n          filters: $filters\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            id\n          }\n        }\n      }\n    "): (typeof documents)["\n      query SearchTvs(\n        $page: Int!\n        $offset: Int!\n        $sortBy: [String]!\n        $filters: TvFiltersInput\n      ) {\n        tvs(\n          pagination: { page: $page, pageSize: $offset }\n          sort: $sortBy\n          filters: $filters\n        ) {\n          meta {\n            pagination {\n              pageCount\n            }\n          }\n          data {\n            id\n          }\n        }\n      }\n    "];
export function graphql(source: "\n  fragment CoreTv on Tv {\n    name\n    ean\n    slug\n    score\n    minPrice\n    maxPrice\n    general {\n      screenSize\n      releaseDate\n      brand {\n        model\n        serie {\n          data {\n            id\n            attributes {\n              uid\n              name\n              brand {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    image {\n      id\n      score\n      resolution {\n        data {\n          attributes {\n            resolution\n            alternativeName\n          }\n        }\n      }\n      technology {\n        image {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        panel {\n          data {\n            attributes {\n              type\n            }\n          }\n        }\n        lightingType {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        creationColor {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        panelManufacturer {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      backlightAndContrast {\n        brightness\n        contrast\n        zoneNumber\n        backlightType {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      colorimetry {\n        dciP3\n        rec709\n        rec2020\n        sRGB\n        colorDepth {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      hdr {\n        technologies {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      crystal {\n        horizontalVisionAngle\n        verticalVisionAngle\n        antiReflectiveFilter\n      }\n      processing {\n        processor {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      responseTimes {\n        gaming {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        inputLag60\n        inputLag120\n      }\n    }\n    sound {\n      id\n      score\n      speakers {\n        power\n        quantity\n      }\n      subwoofers {\n        power\n        quantity\n      }\n      power\n      outputChannels\n      technologies {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n    }\n    connections {\n      id\n      score\n      dvb {\n        data {\n          attributes {\n            name\n            type\n          }\n        }\n      }\n      hbbTV\n      cable {\n        quantity\n        type {\n          data {\n            attributes {\n              name\n              connection {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n        connectionTechnologies {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      wireless {\n        data {\n          attributes {\n            name\n            type {\n              data {\n                attributes {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      extraFeatures {\n        data {\n          attributes {\n            name\n            description\n          }\n        }\n      }\n    }\n    design {\n      id\n      score\n      dimensionsWithStand {\n        width\n        height\n        depth\n        weight\n      }\n      dimensionsWithoutStand {\n        width\n        height\n        depth\n        weight\n      }\n      screenShape {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n      colors {\n        data {\n          attributes {\n            name\n            hex\n          }\n        }\n      }\n      vesa {\n        data {\n          attributes {\n            size\n          }\n        }\n      }\n      pictures {\n        data {\n          attributes {\n            url\n            alternativeText\n            height\n            width\n          }\n        }\n      }\n    }\n    system {\n      id\n      score\n      operatingSystem {\n        data {\n          attributes {\n            version\n            operatingSystem {\n              data {\n                attributes {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      voiceAssistants {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n      hardware {\n        ram\n        rom\n        soc {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      consumption {\n        energyEfficiency\n        averageConsumption\n        consumption\n        standbyConsumption\n      }\n      powerSupply\n      powerSupplyFrequency\n    }\n    reviews {\n      id\n      reviews {\n        data {\n          attributes {\n            title\n            url\n            video\n            image\n            type\n          }\n        }\n      }\n      comparatives {\n        data {\n          attributes {\n            title\n            url\n            video\n            image\n            type\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment CoreTv on Tv {\n    name\n    ean\n    slug\n    score\n    minPrice\n    maxPrice\n    general {\n      screenSize\n      releaseDate\n      brand {\n        model\n        serie {\n          data {\n            id\n            attributes {\n              uid\n              name\n              brand {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    image {\n      id\n      score\n      resolution {\n        data {\n          attributes {\n            resolution\n            alternativeName\n          }\n        }\n      }\n      technology {\n        image {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        panel {\n          data {\n            attributes {\n              type\n            }\n          }\n        }\n        lightingType {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        creationColor {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        panelManufacturer {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      backlightAndContrast {\n        brightness\n        contrast\n        zoneNumber\n        backlightType {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      colorimetry {\n        dciP3\n        rec709\n        rec2020\n        sRGB\n        colorDepth {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      hdr {\n        technologies {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      crystal {\n        horizontalVisionAngle\n        verticalVisionAngle\n        antiReflectiveFilter\n      }\n      processing {\n        processor {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      responseTimes {\n        gaming {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n        inputLag60\n        inputLag120\n      }\n    }\n    sound {\n      id\n      score\n      speakers {\n        power\n        quantity\n      }\n      subwoofers {\n        power\n        quantity\n      }\n      power\n      outputChannels\n      technologies {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n    }\n    connections {\n      id\n      score\n      dvb {\n        data {\n          attributes {\n            name\n            type\n          }\n        }\n      }\n      hbbTV\n      cable {\n        quantity\n        type {\n          data {\n            attributes {\n              name\n              connection {\n                data {\n                  attributes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n        connectionTechnologies {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      wireless {\n        data {\n          attributes {\n            name\n            type {\n              data {\n                attributes {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      extraFeatures {\n        data {\n          attributes {\n            name\n            description\n          }\n        }\n      }\n    }\n    design {\n      id\n      score\n      dimensionsWithStand {\n        width\n        height\n        depth\n        weight\n      }\n      dimensionsWithoutStand {\n        width\n        height\n        depth\n        weight\n      }\n      screenShape {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n      colors {\n        data {\n          attributes {\n            name\n            hex\n          }\n        }\n      }\n      vesa {\n        data {\n          attributes {\n            size\n          }\n        }\n      }\n      pictures {\n        data {\n          attributes {\n            url\n            alternativeText\n            height\n            width\n          }\n        }\n      }\n    }\n    system {\n      id\n      score\n      operatingSystem {\n        data {\n          attributes {\n            version\n            operatingSystem {\n              data {\n                attributes {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      voiceAssistants {\n        data {\n          attributes {\n            name\n          }\n        }\n      }\n      hardware {\n        ram\n        rom\n        soc {\n          data {\n            attributes {\n              name\n            }\n          }\n        }\n      }\n      consumption {\n        energyEfficiency\n        averageConsumption\n        consumption\n        standbyConsumption\n      }\n      powerSupply\n      powerSupplyFrequency\n    }\n    reviews {\n      id\n      reviews {\n        data {\n          attributes {\n            title\n            url\n            video\n            image\n            type\n          }\n        }\n      }\n      comparatives {\n        data {\n          attributes {\n            title\n            url\n            video\n            image\n            type\n          }\n        }\n      }\n    }\n  }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;